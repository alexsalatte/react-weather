{"version":3,"sources":["index.js","key.js"],"names":["key","require","Forecast","props","className","style","display","location","temp","Math","round","humidity","wind","src","icon","alt","desc","App","state","city","country","handleChange","bind","handleSubmit","event","target","value","name","this","setState","fetch","appid","then","response","status","json","data","console","log","weather","toLowerCase","split","map","word","charAt","toUpperCase","substring","join","main","speed","description","catch","err","preventDefault","id","onSubmit","placeholder","onChange","type","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cb86b4e2.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst urlBase = 'http://api.openweathermap.org/data/2.5/';\nconst urlImg = 'http://openweathermap.org/img/wn/';\n// TODO: add appid to a key.js file\nconst key = require('./key.js');\n\nfunction kelvinToCelcius(temp) {\n  return Math.round((temp - 273.15) * 10) / 10.0;\n}\n\nfunction camelCase(name) {\n   return name.toLowerCase().split(' ').map( word => word.charAt(0).toUpperCase() + word.substring(1)).join(' ');\n}\n\n/*\nView for the current weather forecast.\nCurrently only shows the current weather.\nHidden when page loads up.\n*/\nfunction Forecast(props) {\n  return(\n    <div className=\"card\" style={{display: props.display}}>\n      <h2 className=\"location\">{props.location}</h2>\n      <p className=\"temp\">{kelvinToCelcius(props.temp)}&#8451;</p>\n      <p className=\"humidity\">Humidity: {props.humidity}%</p>\n      <p className=\"wind\">Wind: {props.wind}km/h</p>\n      <img className=\"weather-icon\" src={props.icon} alt={props.desc} />\n      <p className=\"weather-desc\">{props.desc}</p>\n    </div>\n  );\n}\n\n/*\nWeather app parent.\nHolds the form and manages the state.\nFetches weather info using openweathermap api\n*/\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      city: '',\n      country: '',\n      location: 'N/A',\n      temp: 0,\n      humidity: 0,\n      wind: 0,\n      icon: 'logo192.png',\n      desc: 'N/A',\n      display: 'none',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    // update state values\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(event) {\n    fetch(`${urlBase}weather?q=${this.state.city},${this.state.country}&appid=${key.appid}`)\n      .then(\n        (response) => {\n          // unsuccesful request\n          if (response.status !== 200) {\n            console.log('Looks like there was a problem. Status Code: ' +\n              response.status);\n              return;\n          }\n\n          // succesful request\n          response.json().then((data) => {\n            console.log(data);\n            const weather = data.weather[0];\n\n            // update state values\n            this.setState({location: `${camelCase(this.state.city)}, ${this.state.country.toUpperCase()}`});\n            this.setState({temp: data.main.temp});\n            this.setState({humidity: data.main.humidity});\n            this.setState({wind: Math.round(data.wind.speed * 36) / 10.0});\n            this.setState({icon: `${urlImg}${weather.icon}@2x.png`});\n            this.setState({desc: weather.description});\n            this.setState({display: 'block'});\n\n            // reset input values\n            this.setState({ city: '' });\n            this.setState({ country: '' });\n          });\n        }\n      )\n      .catch(\n        (err) => {\n          console.log('you suck at programming :)', err);\n        }\n      );\n    // don't let it reload the page\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <form id=\"weather-form\" onSubmit={this.handleSubmit}>\n          <input className=\"form-item\" name=\"city\" value={this.state.city} placeholder=\"City\" onChange={this.handleChange} />\n          <input className=\"form-item\" name=\"country\" value={this.state.country} placeholder=\"Country\" onChange={this.handleChange} />\n          <input className=\"button\" type=\"submit\" value=\"Get Weather\" />\n        </form>\n        <Forecast\n          location={this.state.location}\n          temp={this.state.temp}\n          humidity={this.state.humidity}\n          wind={this.state.wind}\n          icon={this.state.icon}\n          desc={this.state.desc}\n          display={this.state.display}\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = {\n    appid: '8f012415fd01515078dbee7b2432b285'\n}\n"],"sourceRoot":""}